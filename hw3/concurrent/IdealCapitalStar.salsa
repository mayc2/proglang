module concurrent;

import java.io.*;
import java.util.*;

behavior IdealCapitalStar{

	void act(String [] argv) {
		if (argv.length == 1) {
			Vector stars = argv[0];
			Double smallestAverage = new Double(MAX_VALUE);
			Vector capitalStars = new Vector();

			int numDistances = 0;

			join {
			for (int i=0; i<stars.size(); i++) {
				Double sum = new Double();
				for (int j=0; j<stars.size(); j++) {
					if (i==j) continue;
					Double dist = stars[i].distance(stars[j]);
					sum += dist;
					numDistances++;
				}
				// computer average distance
				Double avg = dist/numDistances;
				if (avg < smallestAverage) {
					smallestAverage = avg;
					capitalStars.clear();
					capitalStars.add(stars[i]);
				}
				else if (avg == smallestAverage) {
					capitalStars.add(stars[i]);
				}
			}
			} @

			for (int i=0; i<capitalStars.size(); i++) {
				standardOutput <- println( "(" + capitalStars[i].getX() + "," + capitalStars[i].getY() + "," + capitalStars[i].getZ() + ")" );
			}
		} 
		else {
			standardError <- println( "Invalid number of arguments!" );
		}
	}

}